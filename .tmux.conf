#===============================================================================
## rename a window.
# Ctrl + b + , if you have C-b as send prefix (it's by default)
# Also C-b :rename-window <new name> and
# tmux rename-window <new name> work too.
#
## If you prefer to give your sessions a more meaningful name
## (instead of a numerical one starting with 0) you can create your
##next session using
# tmux new -s database
#
## You could also rename your existing session:
# tmux rename-session -t 0 database
#
## Scripting tmux
## Written on 3 Jan 2020
# https://www.arp242.net/tmux.html
#
##
## I found the commands by using tmux list-keys -T prefix to find out which
## command is being sent and then look up the documentation for that command in
## the tmux(1) manpage by searching with /command-name.
#
## One annoyance is that tmux only has short options (e.g. -s) and no long
## options (e.g. -session-name). Short options are great for typing on the
## commandline since it’s, well, short. But long options are much more useful
## for scripts, especially for options you don’t use every day. Compare:
##
#$ tmux new-session -d -s site -n server
#
#$ tmux new-session -detached -session-name site -window-name server

#===============================================================================





##Set the prefix to ^A (C-a)
#unbind C-b
#set -g prefix ^A  ## can be done like this to => set -g prefix ^A
#bind a send-prefix

## split panes using | and -
#unbind %
#unbind '"'
#bind | split-window -h
#bind - split-window -v


## Enable mouse mode (tmux 2.1 and above)
#set -g mouse on


## don't rename windows automatically
#set -g allow-rename off


################################################################################
##Set the prefix to ^A (C-a)
unbind C-b
set -g prefix ^A
bind a send-prefix

# 0 is too far from ` ;)
set -g base-index 1


# default shell
set-option -g default-shell /usr/bin/zsh

# Automatically set window title
set-window-option -g automatic-rename on
#set-option -g set-titles on

set -g default-terminal xterm-256color
set-option -sa terminal-overrides ',xterm-256color:RGB'
set -g status-keys vi
setw -g mode-keys vi
#set -g history-limit 10000

setw -g mouse on
#setw -g monitor-activity on

#bind-key v split-window -h
#bind-key s split-window -v

############################## Pane config #####################################
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
########################## END Pane config #####################################

############################## Window config ###################################
# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Toggle last active window
bind-key l last-window
########################## END Window config ###################################

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
# prefix + R
#bind r source-file ~/.tmux.conf

# Use v to trigger selection
bind-key -T copy-mode-vi v send-keys -X begin-selection

## Use y to yank current selection
#bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
## use to cpoy to system clipboard Also.
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# THEME
#set -g status-bg black
#set -g status-fg white
#set -g window-status-current-style bg=white
#set -g window-status-current-style fg=black
##set -g window-status-current-style attr=bold
#set -g status-interval 60
#set -g status-left-length 30
#set -g status-left '#[fg=green](#S) #(whoami)'
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-sensible'

############################## ColoTag status ##################################
set -g @plugin 'Determinant/tmux-colortag'

##### To manually set the color of the active window tag,
#press prefix + T(default is C) and:
#color-idx <0-255 color code>  to manually set the color for the window index
#color-name <0-255 color code> to manually set the color for the name
#clear-idx                     clears the preivous color of the index
#clear-name                    clears the preivous color of the name
#clear-all                     use auto-coloring for all window tags

### a BASH snippet that list the colour255 index
#   for i in {0..255}; do
#       printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
#   done
##################################################

#If you love the status bar on the top (instead of at the bottom by default in tmux),
#add 'set-option -g status-position top'
set-option -g status-position top

##### Other tweakable variables:
#colortag default command prompt key is prefix + C and it conflict's with
#"tmux-sessionist" prefix + C (shift + c) - creating a new session by name.
#this changes it to T (shift + t)
TMUX_COLORTAG_KEY=T
#TMUX_COLORTAG_USE_POWERLINE=yes
# uncomment the following line to have rounded arrows
#TMUX_COLORTAG_ROUNDED_POWERLINE=yes

TMUX_COLORTAG_TAG_BOLD=yes          #specify yes if you want bold tag text
TMUX_COLORTAG_TAG_FOCUS_UNDERLINE=yes  #specify yes if you want underlined text for the active tag
TMUX_COLORTAG_TAG_TEXT_COLOR=#ebc8c5
TMUX_COLORTAG_TAG_FOCUS_TEXT_COLOR=#419c50
#TMUX_ARROW_SYMBOL_L1
#TMUX_ARROW_SYMBOL_L2
#TMUX_ARROW_SYMBOL_R1
#TMUX_ARROW_SYMBOL_R2
#TMUX_COLORTAG_SET_INTERVAL         #this plugin assumes a short status update
                                    #interval. To change it back, make it no or
                                    # directly override the setting in your tmux config file.
#TMUX_COLORTAG_TAG_ONLY=yes            #if you only want to color the tags (without changing other styles such as borders), make it yes.
#TMUX_COLORTAG_IDX_SEP              #controls the separator between the window index and name.
#TMUX_COLORTAG_SEP_LEFT_PADDING=no     #padding string before the separator
#TMUX_COLORTAG_SEP_RIGHT_PADDING    #padding string after the separator

##### Theme colors (value example: "colour123")
#colortag_bg0
#colortag_bg1
#colortag_white0                    #font color of the active tag
#colortag_white1                    #color of the active pane border
#colortag_lightgray
#colortag_darkgray

############################# END colortag #####################################

################################################################################
#https://github.com/iggredible/tmux-colorful
#There are many great tmux themes out there. One problem with those tmux themes
#is that your color schemes options are limited. You are either using what they
#predefined for you, or you are left to decide your own colors.

#There are color schemes generators that let you to generate your own color schemes.
#One of my favorite color schemes generator is coolors (https://coolors.co/). This plugin lets you to
#quickly use color schemes from coolors.
################################################################################
################################################################################
set -g @plugin 'tmux-plugins/tmux-resurrect'
# tmux-resurrect bindings
#prefix + Ctrl-s - save
#prefix + Ctrl-r - restore
################################################################################

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'


# runnig tpm install automatically after testing
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
 #Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
